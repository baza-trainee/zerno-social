{"mappings":"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","sources":["node_modules/tw-elements/node_modules/chart.js/dist/chunks/helpers.segment.mjs","node_modules/tw-elements/node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","parts","split","tmp","part","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","constructor","ret","hexParse","this","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","listenArrayEvents","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","swap","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","createScaleContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","ScatterController","__proto__","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","axisFromPosition","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","toRadiusCorners","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","$363256cb518151c8$export$2d1720544b23b823"],"version":3,"file":"chart.es.1b09d6c5.js.map"}